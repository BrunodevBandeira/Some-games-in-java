package br.com.JogoDaNave;
import java.awt.Image;
import java.awt.Rectangle;
import java.awt.event.KeyEvent;
import java.util.ArrayList;
import java.util.List;
import javax.swing.ImageIcon;

public class Nave {

	private int x, y; // São as coordenadas de onde a nave estara na tela.
	private int dx, dy; //  São os pixeus, os espaçamentos que a nave da na tela.
	private int altura, largura;
	private Image imagem;
	private boolean isVisivel;
	
	private  static List<Missel> misseis; 
	
	public boolean isVisivel() {
		return isVisivel;
	}

	public void setVisivel(boolean isVisivel) {
		this.isVisivel = isVisivel;
	}


	public Nave() {

		 ImageIcon referencia = new ImageIcon("res\\nave.gif");// é usado para mandar a imagem para o ebjeto Image.
		 imagem = referencia.getImage(); // Image recebe a imagem que a referencia pegou.
		 
		 altura = imagem.getHeight(null);
		 largura = imagem.getWidth(null);
		 
		 misseis = new ArrayList<Missel>();
		 this.x = 100; // coordenadas da nave
		 this.y = 100;
	}
	
	public static List<Missel> getMisseis() {
		return  misseis;
	}

	public void mexer() {
		System.out.println(x + ", " + y); // é para printar as coordenadas.
		x += dx; // são as coordenadas que faz a nave andar.
		y += dy;
		
		if(this.x < 1) {
			x = 1;
		}
		
		if(this.x > 462) {
			x = 462;
		}
		
		if(this.y < 1) {
			y = 1;
		}
		
		if(this.y > 462) {
			y = 462;
		}
	}

	public int getX() {
		return x;
	}

	public int getY() {
		return y;
	}

	public Image getImagem() {
		return imagem;
	}
	
	public void atira() {
		this.misseis.add(new Missel(x + largura, y + altura/2)); //Esse comando garante que o missel saia na frente da nave.
	}

	public void keyPressed(KeyEvent tecla) { //keyPressed é usado para mandar um comando para o método mexer , porem o método KeyPressed 
	                                         //só é chamado na hora que o botão é apertado.	
 		int codigo = tecla.getKeyCode();
		
		if(codigo == KeyEvent.VK_SPACE) {
			atira();
		}
		 
		if(codigo == KeyEvent.VK_UP) {
			dy = -1; // Na linha 47 estou somando , mas aqui eu passo um número negativo , pois não quero a minha nave rápida. 
		}
		
		if(codigo == KeyEvent.VK_DOWN) {
			dy = 1;
		}
		
		if(codigo == KeyEvent.VK_LEFT) {
			dx = -1;
		}
		
		if(codigo == KeyEvent.VK_RIGHT) {
			dx = 1;
		}
	}
	
	public void keyReleased(KeyEvent tecla) { // Ele é usado na hora que soltamos o botão, significa o fim de um comando.
		int codigo = tecla.getKeyCode();      //KeyEvent tem um método getKeyCode() que pega a tecla que eu apertei.
		
		
		if(codigo == KeyEvent.VK_UP) {       //KeyEvent. tem o código de cada tecla no teclado.
			
			dy = 0; // Tem que ser zero, pois na hora q solta o botão , ele tem q somar zero , logo , ficar parado.
		}
		
		if(codigo == KeyEvent.VK_DOWN) {
			dy = 0;
		}
		
		if(codigo == KeyEvent.VK_LEFT) {
			dx = 0;
		}
		
		if(codigo == KeyEvent.VK_RIGHT) {
			dx = 0;
		}
	}
	
	public Rectangle getBounds() {
		return new Rectangle(x, y, largura, altura);
	}
}